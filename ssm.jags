

  model {

  ## Likelihood

  # modelo de observacao
  # observacao resulta do tamanho populacao + erro de observacao aleatorio
  for(i in 1:nobs) {
    y[i,3] ~ dnorm(N_est[year[y[i,1]], y[i,2]], tau_obs)
    }

  # modelo de estado
  # populacao resulta da populacao no ano anterior * taxa de
  # crescimento com variacao aleatoria
  for (year in 1:(nyears-1)){
  for(j in 1:nsites) {
    r[year,j] ~ dnorm(mean_r, tau_proc)
    N_est[year+1,j] <- N_est[year,j]*exp(r[year,j])
    }
  }

  # priors
  for(j in 1:nsites) {
  N_est[1,j] ~ dunif(0, 3)  # populacao inicial
  }
  mean_r ~ dnorm(0, 0.001)  # taxa de crescimento medio

  # priors
  # populacao ano 1
  # populacao em cada trilha = N_medio_UC + variacao aleatoria
  # taxa de crescimento em cada trilha = r_medio + variacao aleatoria
  #for(j in 1:nsites) {
  #  eps_pop_site[j] ~ dnorm(0, tau_site) # variacao aleatoria entre trilhas
  #  N_est[1,j] <- N_media_UC_ano_1 + eps_pop_site[j] # populacao inicial em cada trilha
  #}
  #mean_r ~ dnorm(0, 0.001)
  #N_media_UC_ano_1 ~ dnorm(1, 0.001)
  #tau_site <- 1/(sd_eps_site*sd_eps_site)
  #sd_eps_site ~ dunif(0,3)

  # sd do processo de estado
  sigma_proc ~ dunif(0, 1)
  tau_proc <- pow(sigma_proc, -2)

  # sd do processo de observacao
  sigma_obs ~ dunif(0, 1)
  tau_obs <- pow(sigma_obs, -2)

  # parametros derivados
  for(i in 1:nyears) {
    N_uc[i] <- mean(N_est[i,]) # media anua das trilhas
  }
  r_mean <- mean_r
  cv <- sd(N_uc)/mean(N_uc)

  # avaliar ajuste do modelo usando discrepancia do Chi-quadrado

  # computar estatistica de ajuste E para os dados observados
  #eval[i,j] <- logN_est[i,j]   	# valores esperados
  #E[i,j] <- pow((y[i,j] - eval[i,t]),2) / (eval[i,t] + 0.5)

  # gerar dados replicados e computar estatistica de ajuste para eles
  #y.new[i,t] ~ dbin(p[i,t], k[i,t])
  #E.new[i,t] <- pow((y.new[i,t] - eval[i,t]),2) / (eval[i,t] + 0.5)

  }
  
