

  model {

  ## Likelihood

  # modelo de observacao
  # cada observacao resulta do tamanho da populacao + ruido aleatorio
  for(i in 1:nobs) {
    y[i,3] ~ dnorm(exp(logN_est[year[y[i,1]], y[i,2]]), tau_obs)
    }

  # modelo de estado
  # cada populacao resulta da populacao no ano anterior * taxa de
  # crescimento + flutuacoes estocasticas
  for (year in 1:(nyears-1)){
  for(j in 1:nsites) {
    #r[year,j] ~ dnorm(0, tau_proc)
    r[year,j] ~ dnorm(mean_r, tau_proc)
    logN_est[year+1,j] <- logN_est[year,j] + r[year,j]
    }
  }

  # priors
  #for(j in 1:nsites) {
  #logN_est[1,j] ~ dunif(0, 2)  # populacao inicial
  #mean_r[j] ~ dnorm(1, 0.001)  # taxa de crescimento medio
  #}

  # prior alternativo para populacao inicial:
  # para cada trilha, N = N_medio_UC + variacao estocastica
  # para cada trilha, r = r_medio + variacao estocastica (random walk)
  for(j in 1:nsites) {
    eps_pop_site[j] ~ dnorm(0, tau_site) # variacao estocastica no N entre trilhas
    logN_est[1,j] <- logN_media_UC_ano_1 + eps_pop_site[j] # populacao inicial de cada trilha
  }
  mean_r ~ dnorm(1, 0.001)
  logN_media_UC_ano_1 ~ dnorm(1.5, 0.001)
  tau_site <- 1/(sd_eps_site*sd_eps_site)
  sd_eps_site ~ dunif(0,3)

  sigma_proc ~ dunif(0, 1) # sd do processo de estado
  tau_proc <- pow(sigma_proc, -2)

  sigma_obs ~ dunif(0, 1)  # sd do processo de observacao
  tau_obs <- pow(sigma_obs, -2)

  # parametros derivados
  for(i in 1:nyears) {
    N_est[i] <- exp(mean(logN_est[i,])) # populacao a cada ano (media das trilhas)
  }
  #r_mean <- mean(r) # r media geral
  r_mean <- mean_r

  cv <- sd(N_est)/mean(N_est)

  # avaliar ajuste do modelo usando discrepancia do Chi-quadrado

  # computar estatistica de ajuste E para os dados observados
  #eval[i,j] <- logN_est[i,j]   	# valores esperados
  #E[i,j] <- pow((y[i,j] - eval[i,t]),2) / (eval[i,t] + 0.5)

  # gerar dados replicados e computar estatistica de ajuste para eles
  #y.new[i,t] ~ dbin(p[i,t], k[i,t])
  #E.new[i,t] <- pow((y.new[i,t] - eval[i,t]),2) / (eval[i,t] + 0.5)

  }

